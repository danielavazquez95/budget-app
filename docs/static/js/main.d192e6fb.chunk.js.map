{"version":3,"sources":["context/Context.js","ui/NavMobile.js","ui/Navbar.js","helpers/fetchOperations.js","components/LoginUser.js","helpers/formLoginValid.js","components/RegisterUser.js","helpers/formRegisterValid.js","routers/AuthRouter.js","components/OperationScreen.js","components/ListOperation.js","components/RegisterOperationForm.js","helpers/formOperationValid.js","components/HomeScreen.js","ui/Footer.js","routers/AppRouter.js","components/App.js","index.js"],"names":["Context","createContext","NavMobile","props","useState","sidebar","setSidebar","useContext","userToken","setUserToken","showSidebar","className","onClick","success","activeClassName","to","localStorage","clear","exact","NavBar","id","getOperations","token","a","fetch","mode","headers","resp","json","data","loginUser","user","method","body","JSON","stringify","LoginUser","initialValue","username","email","password","setUser","history","useHistory","handlerChange","e","target","name","value","onSubmit","form","preventDefault","trim","length","Swal","fire","icon","title","text","then","setItem","push","type","autoComplete","onChange","RegisterUser","password2","setData","registerUser","AuthRouter","path","component","OperationScreen","operation","handleDeleteOperation","layout","styleEdit","setStyleEdit","concept","price","date","defaultValue","disabled","console","log","modifyOperation","ListOperation","operationsData","loadingStatus","operationsList","slice","entryData","filter","expenseData","balance","b","forEach","Number","isNegativeNumber","map","RegisterOperationForm","handleNewOperation","Math","floor","random","userId","parse","getItem","formData","setFormData","formRef","useRef","ref","current","reset","HomeScreen","setLoadingStatus","setOperationsData","useEffect","operations","operationDelete","Footer","href","AppRouter","basename","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d192e6fb.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const Context = createContext();","import React, { useContext, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Context } from '../context/Context';\n\nexport const NavMobile = (props) => {\n\n    const [sidebar, setSidebar] = useState(false);\n    const {userToken,setUserToken} = useContext(Context);\n    const showSidebar = () => setSidebar(!sidebar);\n\n    const handlerClick = () => {\n        setUserToken({});\n        localStorage.clear();\n    };\n\n    return (\n        <>\n            <div className='navbar nav-mobile d-sm-block d-md-none bg-dark' onClick={showSidebar}>\n                <div  className='menu-bars'>\n                    <i className=\"fas fa-bars d-md-none mx-3\" onClick={showSidebar}/>\n                </div>\n            </div>\n            <nav className={sidebar ? 'nav-menu active bg-dark d-sm-block d-md-none' : 'nav-menu  bg-dark d-sm-block d-md-none'} onClick={showSidebar}>\n                <ul className=\"nav-menu-items\" onClick={showSidebar}>\n                 <li className='navbar-toggle bg-dark d-block'>\n                    {\n                        userToken.success ? \n                        <NavLink\n                        activeClassName=\"active\"\n                        className=\"menu-bars nav-text text-danger\" \n                        to=\"#\"\n                        onClick={handlerClick}\n                        >\n                        Log out\n                        </NavLink>\n                        :\n                        <>\n                            <NavLink \n                            activeClassName=\"active\"\n                            className=\"menu-bars nav-text\" \n                            exact to=\"/auth/register\" >\n                            Sign in\n                            </NavLink>\n                            <NavLink \n                            activeClassName=\"active\"\n                            className=\"menu-bars nav-text\" \n                            exact to=\"/auth/login\" >\n                            Log in\n                            </NavLink>\n                        </>\n                    }\n                  </li>\n                </ul>\n            </nav>\n                    \n        </>\n    )\n};","import React, { useContext } from 'react';\nimport { NavLink} from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport { NavMobile } from './NavMobile';\n\nexport const NavBar = (props) => {\n\n    const {userToken,setUserToken} = useContext(Context);\n\n    const handlerClick = () => {\n        setUserToken({});\n        localStorage.clear();\n    };\n\n    return (\n       \n        <div> \n            <NavMobile />\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark d-none d-md-flex\">\n                <div className=\"collapse navbar-collapse justify-content-end mx-5\" id=\"navbarNav\">\n                    {\n                        userToken.success ? \n\n                        <NavLink\n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link text-danger d-none d-md-inline\" \n                        to=\"#\"\n                        onClick={handlerClick}\n                        >\n                        Log out\n                        </NavLink>\n\n                        :\n                        \n                        <ul className=\"navbar-nav\">\n                         <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link d-none d-md-inline\" \n                            exact to=\"/auth/register\" >\n                            Sign up\n                        </NavLink>\n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link d-none d-md-inline\" \n                            exact to=\"/auth/login\" >\n                            Log in\n                        </NavLink>\n                    </ul>\n                    }           \n                </div>\n            </nav>\n        </div>  \n               \n      \n    )\n};","\nexport const getOperations = async (token, id) => {\n\n    const resp = await fetch(`https://budget-apirest.herokuapp.com/api/operations/${id}`, {\n        mode: 'cors',\n        headers: {'user-token': token}\n    });\n    const data = await resp.json();\n    \n    return data;\n};\n\nexport const postOperation = (token, data) => {\n\n    fetch('https://budget-apirest.herokuapp.com/api/operations', {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify(data),\n        headers: { 'user-token': token,'Content-Type': 'application/json' }\n    })\n};\n\nexport const deleteOperation = (token, id) => {\n    console.log('id en delete', id)\n    fetch(`https://budget-apirest.herokuapp.com/api/operations/${id}`, {\n        method: 'DELETE',\n        mode: 'cors',\n        headers: {'user-token': token} \n    })\n};\n\nexport const modifyOperation = (token, id, data) => {\n\n    fetch(`https://budget-apirest.herokuapp.com/api/operations/${id}`, {\n        method: 'PUT',\n        mode: 'cors',\n        body: JSON.stringify(data),\n        headers: { 'user-token': token, 'Content-Type': 'application/json'}\n    })\n};\n\nexport const registerUser = (data) => {\n\n    fetch('https://budget-apirest.herokuapp.com/api/users/register', {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify(data),\n        headers: { 'Content-Type': 'application/json' }\n    })\n\n};\n\nexport const loginUser = async (user) => {\n\n    const resp = await fetch('https://budget-apirest.herokuapp.com/api/users/login', {\n                method: 'POST',\n                mode: 'cors',\n                body: JSON.stringify(user),\n                headers: { 'Content-Type': 'application/json' } });\n    const data = await resp.json();\n\n    return data;\n\n}; ","import React, { useContext, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport { formLoginValid } from '../helpers/formLoginValid';\nimport {loginUser } from '../helpers/fetchOperations';\nimport Swal from 'sweetalert2';\n\n\nexport const LoginUser = () => {\n\n    const initialValue = {\n      username: '',\n      email:'',\n      password:'',\n    };\n\n    const [user, setUser] = useState(initialValue);\n    const {setUserToken} = useContext(Context);\n    const history = useHistory();\n\n\n    const handlerChange = (e) => {\n      setUser({...user, [e.target.name]: e.target.value})\n    };\n\n    const handlerSubmit = (e) => {\n      e.preventDefault();\n    \n      if(formLoginValid(user)){\n        loginUser(user)\n        .then(data => {\n          if(data.success){\n            setUserToken(data);\n            localStorage.setItem('data', JSON.stringify(data));\n            setUser(initialValue);\n            history.push('/');\n          } else {\n             Swal.fire({\n              icon: 'error',\n              title: 'Error',\n              text: 'There was a problem creating your account. Check that your email address is spelled correctly'\n            })\n\n          }});\n       \n      }\n    };\n   \n    return (\n      \n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-11 col-sm-8 col-md-6 col-lg-5 col-xl-4 mt-5 mb-1 \">\n            <form className=\"form-container form-screen\" onSubmit={handlerSubmit}  >\n              <h1 className=\"text-center\">Log in to your account!</h1>\n              <hr/>\n                  <label>Username:</label>\n                  <input \n                      type=\"text\" \n                      name=\"username\" \n                      className=\"form-control my-3\" \n                      autoComplete=\"off\"\n                      onChange={handlerChange}\n                      />\n                  <label>Email:</label>\n                  <input \n                      type=\"text\" \n                      name=\"email\"\n                      className=\"form-control my-3\" \n                      autoComplete=\"off\"\n                      onChange={handlerChange}\n                    />\n                  <label>Password:</label>\n                  <input \n                      type=\"password\" \n                      name=\"password\"\n                      className=\"form-control my-3\" \n                      autoComplete=\"off\"\n                      onChange={handlerChange}\n                    />\n\n                  <div className=\"d-grid gap-2\">\n                    <button \n                        type=\"submit\"\n                        className=\"btn btn-success btn-block my-3\"\n                        autoComplete=\"off\"\n                      >\n                            Log in\n                    </button>\n                    <hr/>\n                    <Link className=\"text-center\" to=\"/auth/register\"> Don't have an account? Sign up </Link> \n                </div>\n          </form>\n          </div> \n        </div>\n      </div> \n    )\n}\n","import Swal from 'sweetalert2';\n\nexport const formLoginValid = (form) => {\n\n    if(form.username.trim().length === 0) {\n        Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Username is required'\n      })\n        return false;\n\n    } else if (form.email.trim().length === 0 ){\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Email is required'\n      })\n        return false;\n\n    } else if (form.password.trim().length === 0 ) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Password is required'\n      })\n        return false;\n    }\n\n    return true;\n\n};","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { isFormValid } from '../helpers/formRegisterValid';\nimport { registerUser } from '../helpers/fetchOperations';\nimport Swal from 'sweetalert2';\n\nexport const RegisterUser = () => {\n\n    const initialValue = {\n      username: '',\n      email:'',\n      password:'',\n      password2: ''\n    };\n    \n    const [data, setData] = useState(initialValue);\n    const history = useHistory();\n\n    const handlerChange = (e) => {\n      setData({...data, [e.target.name]: e.target.value})\n    };\n  \n    const handlerSubmit = (e) => {\n      e.preventDefault();\n      if(isFormValid(data)){\n        registerUser(data);\n        setData(initialValue);\n        Swal.fire({\n          icon: 'success',\n          title: 'Error',\n          text: 'Your account was successfully registered'\n        })\n        history.push('/auth/login');\n      }\n    };\n\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-11 col-sm-8 col-md-6 col-lg-5 col-xl-4 mt-5 mb-1\">\n          <form className=\"form-container form-screen\" onSubmit={handlerSubmit} >\n            <h1 className=\"text-center\">Sign up to get started</h1>\n            <hr/>\n                <label>Username:</label>\n                <input \n                    type=\"text\" \n                    name=\"username\" \n                    className=\"form-control my-3\" \n                    autoComplete=\"off\"\n                    onChange={handlerChange}\n                    />\n                <label>Email:</label>\n                <input \n                    type=\"text\" \n                    name=\"email\"\n                    className=\"form-control my-3\" \n                    autoComplete=\"off\"\n                    onChange={handlerChange}\n                  />\n                <label>Password:</label>\n                <input \n                    type=\"password\" \n                    name=\"password\"\n                    className=\"form-control my-3\" \n                    autoComplete=\"off\"\n                    onChange={handlerChange}\n                  />\n                <label>Confirm password:</label>\n                <input \n                    type=\"password\" \n                    name=\"password2\"\n                    className=\"form-control my-3\" \n                    autoComplete=\"off\"\n                    onChange={handlerChange}\n                  />\n                \n                <div className=\"d-grid gap-2\">\n                  <button \n                      type=\"submit\"\n                      className=\"btn btn-success btn-block my-3\"\n                      autoComplete=\"off\"\n                    >\n                          Sign up\n                  </button>\n                  <hr/>\n                  <Link className=\"text-center\" to=\"/auth/login\"> Already have an account? </Link> \n                </div>\n          </form>\n          </div> \n        </div>\n      </div>\n\n    )\n};\n","import Swal from 'sweetalert2';\n\nexport const isFormValid = (form) => {\n\n    if(form.username.trim().length === 0) {\n        Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Username is required'\n      })\n        return false;\n\n    } else if (form.email === 0 ){\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Email is required'\n      })\n        return false;\n\n    } else if (form.password.length === 0 ) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Password is required'\n      })\n        return false;\n\n    } else if (form.password2.length === 0 || form.password2 !== form.password) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Password is incorrect'\n      })\n        return false;\n    }; \n\n    return true;\n\n};","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport { LoginUser } from '../components/LoginUser';\nimport { RegisterUser } from '../components/RegisterUser';\n\n\nexport const AuthRouter = () => {\n\n    return (\n        <>\n            <Route exact path=\"/auth/login\" component={LoginUser}/>\n            <Route exact path=\"/auth/register\" component={RegisterUser}/>\n        </>\n\n    )\n};\n","import React, { useContext, useState } from 'react';\nimport { deleteOperation, modifyOperation } from '../helpers/fetchOperations';\nimport { Context } from '../context/Context';\n\n\nexport const OperationScreen = ({operation, handleDeleteOperation, layout}) => {\n\n    const [styleEdit, setStyleEdit] = useState(true);\n    const [data, setData] = useState({\n        concept: operation.concept,\n        price: operation.price,\n        date: operation.date\n    });\n\n    const {userToken} = useContext(Context);\n\n    const handlerClick = () => {\n        setStyleEdit(!styleEdit);\n   };\n\n   const handlerChange = (e) => { \n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        });\n   };\n\n   const handleDeleteClick = () => {\n    deleteOperation(userToken.success, operation.id);\n    handleDeleteOperation(operation);\n   }\n\n    return (\n\n        <div className={`container ${layout} p-3 card-operation `}>\n            <div className=\"row mb-3\">\n                <input className=\"form-control input-operation pt-1 mb-2 text-center font-weight-bold\" name=\"concept\" defaultValue={operation.concept} disabled={styleEdit} onChange={handlerChange} />\n                <label className=\"col-4 col-form-label text-right pe-2 py-0\">Price: </label>\n                <div className=\"col-8 d-flex\">\n                   <span className=\"text-dark\">$</span> <input type=\"number\" className=\"form-control input-operation px-2 py-0\" name=\"price\" defaultValue={operation.price} disabled={styleEdit} onChange={handlerChange}/>\n                </div>\n                <label className=\"col-4 col-form-label text-right pe-2 py-0\">Date: </label>\n                <div className=\"col-8 pt-1\">\n                    <input type=\"date\" className=\"form-control input-operation px-2 py-0\" name=\"date\" defaultValue={operation.date} disabled={styleEdit} onChange={handlerChange}/>\n                </div>\n                <label className=\"col-4 col-form-label text-right pe-2 py-0\">Type: </label>\n                <div className=\"col-8 pt-1\">\n                    <input className=\"form-control input-operation pe-2 py-0\" name=\"type\" defaultValue={operation.type} disabled={true} onChange={handlerChange}/>\n                </div>\n            </div>\n            <i className=\"delete-icon far fa-trash-alt ps-1 pb-2\" onClick={handleDeleteClick} />\n            <i className=\"edit-icon far fa-edit ps-2 pb-2 \" onClick={handlerClick} />\n           <button \n                type=\"button\" \n                className={`btn btn-success btn-sm ms-5 ${styleEdit && 'd-none'}`} \n                onClick={() => {\n                    modifyOperation(userToken.success, operation.id, data);\n                    setStyleEdit(!styleEdit);\n                }}\n            >\n               Save\n           </button>\n        </div>           \n    )\n};\n","import React  from 'react';\nimport { OperationScreen } from './OperationScreen';\n\nexport const ListOperation = ({operationsData, handleDeleteOperation, loadingStatus}) => {\n\n    const operationsList = operationsData.length < 10 ? operationsData : operationsData.slice(-10);\n    const entryData = operationsList.filter(operation => operation.type === 'Entry');\n    const expenseData = operationsList.filter(operation => operation.type === 'Expense');\n    \n    const balance = () => {\n\n        let a = 0;\n        let b = 0;\n\n        entryData.forEach(operation => a += Number(operation.price));\n        expenseData.forEach(operation => b += Number(operation.price));\n        \n        return a - b\n\n    };\n    \n    const isNegativeNumber = () => {\n        if (balance() > 0){\n            return true\n        } else if (balance() < 0 ){\n            return false\n        }\n        return 'equal'\n    };\n\n\n    return (\n    \n        <div className=\"col mt-5 mb-5\"> \n            <div className=\"form-container\" >\n             <h3 className='text-center'>Current balance:<span className={`text-center ${(isNegativeNumber() === 'equal') || (isNegativeNumber() ? 'text-success' : 'text-danger')}`} >{` $${ balance()}`}</span></h3>\n                <hr/> \n                <h4 className=\"text-center\">Operations</h4>\n                <hr/>  \n                {loadingStatus ? <h4 className=\"animate__animated animate__flash d-block text-center\">Loading...</h4> :\n                (<div className=\"row\">\n                    <div className=\"col\">\n                        <h4 className=\"text-center pb-2\">Entry</h4>\n                        { \n                            entryData.map( operation =>  <OperationScreen key={operation.id} operation={operation} handleDeleteOperation={handleDeleteOperation} layout='alert alert-primary p-1'/>)\n                        }\n                    </div>\n                    <div className=\"col\">\n                        <h4 className=\"text-center pb-2\">Expenses</h4>\n                        {   \n                            expenseData.map( operation =>  <OperationScreen key={operation.id} operation={operation} handleDeleteOperation={handleDeleteOperation} layout='alert alert-danger p-1' />)\n                        }\n                    </div>\n                </div>\n                )}\n            </div>\n        </div>\n    \n    )\n};\n\n","import React, { useContext, useRef, useState } from 'react';\nimport { Context } from '../context/Context';\nimport { isFormValid } from '../helpers/formOperationValid';\nimport { postOperation } from '../helpers/fetchOperations';\n\nexport const RegisterOperationForm = ({handleNewOperation}) => {\n\n  const {userToken} = useContext(Context);\n\n  const initialValue = {\n    id: Math.floor(Math.random() * 100),\n    concept:'',\n    price: null,\n    date:'',\n    type:'Click to select',\n    userId: JSON.parse(localStorage.getItem('data')).id\n  };\n\n  const [formData, setFormData] = useState(initialValue);\n\n  const formRef = useRef(null);\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    if(isFormValid(formData)) {\n      handleNewOperation(formData);\n      postOperation(userToken.success, formData);\n      formRef.current.reset();\n      setFormData(initialValue);\n    }\n   \n  };  \n\n  return (\n\n        <div className=\" col-sm-8 col-lg-4 mt-5\">\n            <form className=\"form-container\" ref={formRef} onSubmit={handlerSubmit}>\n              <h1 className=\"text-center\">Add new operation</h1>\n              <hr/>\n                  <label>Concept:</label>\n                  <input \n                      type=\"text\" \n                      name=\"concept\" \n                      className=\"form-control my-3\" \n                      autoComplete=\"off\"\n                      onChange= {(e)=> setFormData({...formData, concept: e.target.value})}\n                      />\n                  <label>Price:</label>\n                  <input \n                      type=\"number\" \n                      name=\"price\"\n                      className=\"form-control my-3\" \n                      autoComplete=\"off\"\n                      onChange= {(e)=> setFormData({...formData, price: e.target.value})}\n                    />\n                  <label>Date:</label>\n                  <input \n                      type=\"date\" \n                      name=\"date\"\n                      className=\"form-control my-3\" \n                      autoComplete=\"off\"\n                      onChange= {(e)=> setFormData({...formData, date: e.target.value})}\n                    />\n                  <label>Type:</label>\n                  <select className=\"form-control my-3\" onChange={(e) => setFormData({...formData, type: e.target.value})}>\n                    <option >Click to select</option>\n                    <option >Entry</option>\n                    <option >Expense</option>\n                  </select>\n                  <div className=\"d-grid gap-2\">\n                    <button \n                        type=\"submit\"\n                        className=\"btn btn-success btn-block my-3\"\n                        autoComplete=\"off\"\n                      >\n                            Add operation\n                    </button>\n                </div>\n          </form>\n        </div>                    \n  )\n};\n","import Swal from 'sweetalert2';\n\nexport const isFormValid = (form) => {\n\n    if(form.concept.trim().length === 0) {\n        Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Concept is required'\n      })\n        return false;\n\n    } else if (form.price === null ){\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Price is required'\n      })\n        return false;\n\n    } else if (form.date.length === 0 ) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Date is required'\n      })\n        return false;\n\n    } else if (form.type === 'Click to select') {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Type is required'\n      })\n        return false;\n    }; \n\n    return true;\n\n};","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport { getOperations } from '../helpers/fetchOperations';\nimport { ListOperation } from './ListOperation';\nimport { RegisterOperationForm } from './RegisterOperationForm';\n\n\nexport const HomeScreen = () => {  \n    \n    const {userToken, loadingStatus, setLoadingStatus } = useContext(Context)\n    const [operationsData, setOperationsData] = useState([]);\n\n\n    useEffect(() => {\n\n        if(userToken.success) {\n            getOperations(userToken.success, userToken.id)\n            .then( operations => {\n                setOperationsData(operations);\n                setLoadingStatus(false);\n            });\n        };\n\n    }, [userToken.success, userToken.id ]);\n    \n    \n    const handleNewOperation = (operation) => {\n        setOperationsData([...operationsData, operation]);\n    };\n\n    const handleDeleteOperation = (data) => {\n        const operationDelete = [...operationsData].filter(operation => operation.id !== data.id );\n        setOperationsData(operationDelete);\n    };\n\n    return (\n        <>\n        {\n             (userToken.success ||  localStorage.getItem('data') ) ? \n             (<div className=\"container box\">\n                <div className=\"row justify-content-center\">\n                    <RegisterOperationForm handleNewOperation={handleNewOperation}/>\n                    <ListOperation operationsData={operationsData} handleDeleteOperation={handleDeleteOperation} loadingStatus={loadingStatus}/>\n                </div>\n            </div>)\n            :\n            (<Redirect to=\"/auth/login\"/>)\n        }\n        </>\n    )\n};\n","import React from 'react';\n\nexport const Footer = () => {\n\n    return (\n         \n        <div className=\"footer\">\n            <footer className=\" bg-dark py-4\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col text-center\">\n                            <h5 className=\"text-white d-inline\">Created and designed by Daniela Vazquez - ©2021</h5> \n                            <br/>\n                            <label className=\"text-white d-inline text-secondary\"> Buenos Aires - Argentina </label>                                                   \n                            <hr className=\"w-50\"/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col text-center\">\n                            <a className=\"nav-item nav-link d-inline text-white\" href=\"https://github.com/danielavazquez95\" target=\"_blank\">\n                                <i className=\"fab fa-github\" />\n                            </a>\n                            <a className=\"nav-item nav-link d-inline text-white\" href=\"mailto:danielavazquez95@gmail.com\" target=\"_blank\">\n                                <i className=\"far fa-envelope\"/>\n                            </a>\n                        </div>  \n                    </div>\n                </div>      \n            </footer>\n        </div>\n    )\n}","import React, { useContext, useEffect } from 'react';\nimport {\n    HashRouter,\n    Switch,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport { NavBar } from '../ui/Navbar';\nimport { AuthRouter } from './AuthRouter';\nimport { HomeScreen } from '../components/HomeScreen';\nimport { Footer } from '../ui/Footer';\nimport { Context } from '../context/Context';\nimport '../css/index.css';\n\nexport const AppRouter = () => {\n\n    const {setUserToken} = useContext(Context);\n    \n    useEffect(() => {\n        localStorage.getItem('data') && setUserToken( JSON.parse(localStorage.getItem('data')))\n    }, [])\n\n    return (\n        \n      \n        <HashRouter basename='/'>\n            <div className=\"home-screen\">\n                <NavBar />\n                <Switch>\n                    <Route path=\"/auth\" component={AuthRouter} />\n                    <Route exact path=\"/\" component={HomeScreen} />\n                    <Redirect to=\"/auth\"/>\n                </Switch>\n            </div>\n            <Footer/>\n        </HashRouter>\n    )\n};\n","import React, { useState } from 'react';\nimport { Context } from '../context/Context';\nimport { AppRouter } from '../routers/AppRouter';\nimport '../css/index.css';\n\nexport const App = () => {\n\n    const [userToken, setUserToken] = useState({});\n    const [loadingStatus, setLoadingStatus] = useState(true);\n\n    return (\n        <Context.Provider value={{ userToken, setUserToken, loadingStatus, setLoadingStatus }}> \n           <AppRouter/>\n        </Context.Provider>\n    )\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport './css/index.css';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}